LIST P=16F877
#INCLUDE "P16F877.INC"
TMGENR1 EQU 20H
TMGENR2 EQU 21H
MOVNUM EQU 22H;循环数
MOVBUFCOM EQU 23H;命令控制字
MOVBUFNUM EQU 24H;命令控制数
BUFNUMH EQU 25H;命令控制数高位
BUFNUML EQU 26H;命令控制数低位
TIM0COUNT EQU 27H;TMR0循环
INIADDRESS EQU 28H;初始化用的地址
ININUM EQU 29H;初始化用的循环
SECONDL EQU 2AH
SECONDH EQU 2BH
MINUTEL EQU 2CH
MINUTEH EQU 2DH
HOURL EQU 2EH
HOURH EQU 2FH
DAYL EQU 30H
DAYH EQU 31H
MONTHL EQU 32H
MONTHH EQU 33H
YEAR1 EQU 34H
YEAR2 EQU 35H
YEAR3 EQU 36H
YEAR4 EQU 37H
ADDRESSTEMP EQU 38H
HOURFLAG EQU 39H
PAJUDGING EQU 3AH
FLAG EQU 3BH
TEM_REG EQU 3CH
TEMH EQU 3DH
TEML EQU 3EH
WELCOME EQU 3FH
PING_RUN_FLAG  EQU   40H
ORG 0000H
GOTO MAIN
ORG 0004H
GOTO INTAD
ORG 0050H
MAIN
;――――――――――初始化――――――――――――
BCF STATUS,RP0;BANK0
BCF STATUS,RP1
;;;;;;;;;
;;;;;;;;;;;
CLRF PING_RUN_FLAG
CLRF HOURFLAG
CLRF PORTB
CLRF INTCON
CLRF PORTC
CLRF ADRESH
MOVLW 41H
MOVWF ADCON0
BSF INTCON,GIE
BSF INTCON,PEIE
BSF INTCON,INTE
MOVLW .40
MOVWF TIM0COUNT
MOVLW 0FFH
MOVWF WELCOME
MOVLW 80H
MOVWF ADDRESSTEMP
BSF STATUS,RP0;BANK1
MOVLW 8EH
MOVWF ADCON1
BSF TRISA,0;RA0输入模式
CLRF TRISC; PORTC输出模式
BSF OPTION_REG,INTEDG
MOVLW 07H
MOVWF OPTION_REG
CLRF TRISC;PORTC OUTPUT
BSF TRISB,0; RB0输入
BSF TRISB,1
BSF TRISB,2
BSF TRISB,4
BCF STATUS,RP0;BANK0
;LCD INITIATION
MOVLW 01H
MOVWF MOVBUFNUM;00000001
CALL WRITING_COMMAND
MOVLW 20H;
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;功能设定
MOVLW 02H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;地址归位
MOVLW 0CH
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;显示状态
MOVLW 01H
MOVWF MOVBUFNUM;00000001
CALL WRITING_COMMAND
;欢迎界面
MOVLW 80H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 57H;W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 45H;E
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 81H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 4CH;L
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 43H;C
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 82H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 4FH;O
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 4DH;M
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 83H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 45H;E
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 21H;!
MOVWF MOVBUFNUM
CALL WRITING_DATA
WELCOME_AGAIN
CALL DELAY1
DECFSZ WELCOME,F
GOTO WELCOME_AGAIN

NOP;
MOVLW 38H;显示数字0，以进行初始化
MOVWF DAYL 
MOVLW 32H
MOVWF DAYH 
MOVLW 32H
MOVWF MONTHL 
MOVLW 30H
MOVWF MONTHH
MOVLW 38H
MOVWF YEAR1 
MOVLW 30H
MOVWF YEAR2
MOVLW 30H 
MOVWF YEAR3
MOVLW 32H 
MOVWF YEAR4
MOVLW 32H
MOVWF HOURH
MOVLW 33H
MOVWF HOURL
MOVLW 30H
MOVWF SECONDH
MOVWF MINUTEH 
MOVLW 39H
MOVWF MINUTEL 
MOVLW 30H
MOVWF SECONDL
CALL DISPLAY_YEAR
CALL DISPLAY_MONTH
CALL DISPLAY_DAY
CALL DISPLAY_HOUR
CALL DISPLAY_MINUTE
CALL DISPLAY_SECOND
;显示汉字年
MOVLW 82H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 0C4H; 显示YEAR
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 0EAH
MOVWF MOVBUFNUM
CALL WRITING_DATA
;显示汉字月
MOVLW 84H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 0D4H; 显示MONTH
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 0C2H
MOVWF MOVBUFNUM
CALL WRITING_DATA
;显示汉字日
MOVLW 86H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 0C8H; 显示DAY
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 0D5H
MOVWF MOVBUFNUM
CALL WRITING_DATA
;显示：
MOVLW 91H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 3AH; 显示：
MOVWF MOVBUFNUM
CALL WRITING_DATA
;显示：
MOVLW 93H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 3AH; 
MOVWF MOVBUFNUM
CALL WRITING_DATA
;显示汉字度
MOVLW 97H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
; 显示汉字度
MOVLW 0B6H
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 0C8H; 
MOVWF MOVBUFNUM
CALL WRITING_DATA
CALL EEPROM_LOAD


;――――――――时间累积――――――――――
SECONDL_AGAIN

AGAIN_TEMPERATURE:
BSF ADCON0,2; 启动AD转换


BTFSS SECONDL,3
GOTO NEXT7_1;没有累积9s
BTFSS SECONDL,0;第三位为1，那第零位是不是1呢？
GOTO NEXT7_1;不是9，是8
GOTO NEXT7_2
NEXT7_1
CALL TIM0_DELAY
INCF SECONDL,F
CALL DISPLAY_SECOND

GOTO SECONDL_AGAIN
NEXT7_2
CALL TIM0_DELAY
MOVLW 30H;是9，1S后置0重来
MOVWF SECONDL
BTFSS SECONDH,2
GOTO NEXT1_1;第2位=0
BTFSS SECONDH,0
GOTO NEXT1_1;此时secondh位为4
MOVLW 30H
MOVWF SECONDH
;――――――――――――――――――
MINUTE_ADD:
BTFSS MINUTEL,3
GOTO BACK_TO_SECOND;没有累积9s
BTFSS MINUTEL,0;第三位为1，那第零位是不是1呢？
GOTO BACK_TO_SECOND;不是9，是8
MOVLW 30H;是9，1S后置0重来
MOVWF MINUTEL
GOTO BACK_WITHOUT_ADD
BACK_TO_SECOND
INCF MINUTEL,F
GOTO NEXT2_2
BACK_WITHOUT_ADD
BTFSS MINUTEH,2
GOTO NEXT2_1;第2 位=0
BTFSS MINUTEH,0
GOTO NEXT2_1;此时MINUTEh位为4
MOVLW 30H
MOVWF MINUTEH
;―――――――― HOUR_ADD――――――――
HOUR_ADD:
BTFSS HOURH,1
GOTO NEXT3_3;HOURH不为2
GOTO NEXT3_4;HOURH是2
;
NEXT3_4
BTFSS HOURL,1
GOTO BACK_TO_MINUTE;不是3
BTFSS HOURL,0;第1位为1，那第0位是不是1呢？
GOTO BACK_TO_MINUTE;不是3，是2
MOVLW 30H;是9，1S后置0重来
MOVWF HOURL
MOVLW 30H
MOVWF HOURH
;_________DAY_ADD_______
;;;;;;;WO_li;;;;;;;;;;;;;先看是不是30号


;;;;;;;;;;;;;;判断平年和闰年,因为10位为奇数的年份，比如201x，203x，205x，末位数字为2,6，而偶数年份末位为0,4,8，所以先判断十位数，这是100年内有效的，但因为100是4的倍数，所以全部年份都有效
;YEAR1
;YEAR2
;YEAR3
;YEAR4
;;;;;;;;;
BTFSS  YEAR2,0  ;;;;;;思路如上，先判断奇偶年份
GOTO  TEST_YEAR__EVEN  ;;不成立则为偶数年，判断其个位数是否为0,4,8
BTFSC YEAR1,0    ;2和6都是偶数，先排除奇数
GOTO  PINGNIAN
BTFSS YEAR1,1
GOTO  PINGNIAN  ;;;这一位为0，则一定是4，或8或0，是平年
GOTO  RUNNIAN
TEST_YEAR__EVEN   ;;;;20EVENX
BTFSC YEAR1,0   ;;;;;;;;;0，4，8都是偶数，先排除奇数
GOTO  PINGNIAN
BTFSC YEAR1,1    ;;;;;;;;权重为2，因为数字只有0-9，这一位成立一定是2或6，所以排除掉，剩下的则都是闰年
GOTO  PINGNIAN
GOTO RUNNIAN
PINGNIAN  
BCF PING_RUN_FLAG,0
GOTO THEN_
RUNNIAN
BSF PING_RUN_FLAG,0



THEN_
BTFSS MONTHH,0
GOTO __JANUARY__TO__SEPTEMBER
BTFSS MONTHL,1
GOTO OCT__OR__NOV
GOTO _DECEMBER
OCT__OR__NOV
BTFSS MONTHL,0
GOTO _OCTOBER
GOTO _NOVEMBER
__JANUARY__TO__SEPTEMBER
BTFSS MONTHL,3
GOTO __JAN__TO__JULY
BTFSS MONTHL,0
GOTO _AUGUST
GOTO _SEPTEMBER
__JAN__TO__JULY
BTFSS MONTHL,2
GOTO __JAN__TO__MARCH
BTFSS MONTHL,1
GOTO APRIL__MAY
BTFSS MONTHL,0
GOTO _JUNE
GOTO _JULY
APRIL__MAY
BTFSS MONTHL,0
GOTO _APRIL
GOTO _MAY
__JAN__TO__MARCH
BTFSS MONTHL,1
GOTO _JANUARY
BTFSS MONTHL,0
GOTO _FEBRUARY
GOTO _MARCH
_JANUARY
GOTO _31_LARGE_MONTH
_FEBRUARY
GOTO _LEAP_MONTH
_MARCH
GOTO _31_LARGE_MONTH
_APRIL
GOTO _30_LITTLE_MONTH
_MAY
GOTO _31_LARGE_MONTH
_JUNE
GOTO _30_LITTLE_MONTH
_JULY
GOTO _31_LARGE_MONTH
_AUGUST
GOTO _31_LARGE_MONTH
_SEPTEMBER
GOTO _30_LITTLE_MONTH
_OCTOBER
GOTO _31_LARGE_MONTH
_NOVEMBER
GOTO _30_LITTLE_MONTH
_DECEMBER
GOTO _31_LARGE_MONTH

_LEAP_MONTH
BTFSS PING_RUN_FLAG,0
GOTO _28_MONTH;平年
GOTO _29_MONTH;闰年

;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;29天的进制
_29_MONTH
BTFSS DAYH,1
GOTO  LESS_29TH ;;;;;;;;;没有到20号
BTFSS  DAYL,3
GOTO  LESS_29TH;;;;;;;;;;;没有到28号
BTFSS  DAYL,0
GOTO  LESS_29TH
MOVLW 31H
MOVWF DAYL
MOVLW 30H
MOVWF DAYH
GOTO TEST_MONTH
LESS_29TH
;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;没有到29号
BTFSS  DAYL,3
GOTO  INC_DAYL
BTFSS DAYL,0
GOTO INC_DAYL
MOVLW 30H
MOVWF DAYL
INCF DAYH,F
CALL DISPLAY
;;;;;;WO_Li
INC_DAYL
INCF  DAYL,F
GOTO  DISPLAY
DAY_HIGH_TEST
BTFSS DAYH,1
GOTO INC_HIGH
BTFSS DAYH,0
GOTO INC_HIGH
MOVLW 30H
MOVWF DAYH
GOTO  TEST_MONTH



_28_MONTH
;;;;;;;;;;;;;;;;;;;;;;;;;;28天的进制
BTFSS DAYH,1
GOTO  LESS_28TH
BTFSS  DAYL,3
GOTO  LESS_28TH
MOVLW 31H
MOVWF DAYL
MOVLW 30H
MOVWF DAYH
GOTO TEST_MONTH
LESS_28TH
;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;没有到28号,看是不是9已经满了
BTFSS  DAYL,3
GOTO  INC_DAYL_
BTFSS DAYL,0
GOTO INC_DAYL_
MOVLW 30H
MOVWF DAYL
INCF DAYH,F
GOTO DISPLAY
;;;;;;WO_Li
INC_DAYL_
INCF  DAYL,F
GOTO  DISPLAY
DAY_HIGH_TEST_
BTFSS DAYH,1
GOTO INC_HIGH
BTFSS DAYH,0
GOTO INC_HIGH
MOVLW 30H
MOVWF DAYH
GOTO TEST_MONTH

_31_LARGE_MONTH
BTFSS DAYH,1       
GOTO  LESS_31TH    ;;;小于20号
BTFSS  DAYH,0
GOTO  LESS_31TH     ;;;小于30号
BTFSS DAYL,0
GOTO  LESS_31TH
MOVLW 31H
MOVWF DAYL
MOVLW 30H
MOVWF DAYH
GOTO TEST_MONTH
LESS_31TH
;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;没有到31号
;BTFSS DAYH,1
;GOTO  LESS__30TH
;BTFSS  DAYH,1
;GOTO  LESS__30TH
;INCF DAYL,F
;GOTO DISPLAY
;;;;;;;;;;;;;;;
LESS__31TH
BTFSS DAYL,3
GOTO INC__DAYL
BTFSS DAYL,0
GOTO INC__DAYL
MOVLW 30H
MOVWF DAYL
INCF DAYH,F
GOTO DISPLAY
;;;;;;WO_Li
INC__DAYL
INCF  DAYL,F
GOTO  DISPLAY
DAY__HIGH_TEST
BTFSS DAYH,1
GOTO INC_HIGH
BTFSS DAYH,0
GOTO INC_HIGH
MOVLW 30H
MOVWF DAYH
GOTO TEST_MONTH

;;;;日满了进月;;;Wo_Li




_30_LITTLE_MONTH
BTFSS DAYH,1
GOTO  LESS_30TH
BTFSS  DAYH,1
GOTO  LESS_30TH
MOVLW 31H
MOVWF DAYL
MOVLW 30H
MOVWF DAYH
GOTO TEST_MONTH
LESS_30TH
;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;没有到30号
BTFSS DAYL,3
GOTO INC_DAYL___
BTFSS DAYL,0
GOTO INC_DAYL___
MOVLW 30H
MOVWF DAYL
GOTO DAY_HIGH_TEST___
;;;;;;WO_Li
INC_DAYL___
INCF  DAYL,F
GOTO  DISPLAY
DAY_HIGH_TEST___
BTFSS DAYH,1
GOTO INC_HIGH
BTFSS DAYH,0
GOTO INC_HIGH
MOVLW 30H
MOVWF DAYH
;;;;日满了进月;;;Wo_Li
;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;
TEST_MONTH
BTFSS MONTHH,0
GOTO  ADD__MONTH_LOW
BTFSS MONTHL,1
GOTO  ADD__MONTH_LOW
MOVLW 31H
MOVWF MONTHL
MOVLW 30H
MOVWF MONTHH
TEST_YEAR_1TO4
BTFSS  YEAR1,3
GOTO  YEAR_ADD_BIT0
BTFSS  YEAR1,0
GOTO  YEAR_ADD_BIT0
MOVLW 30H
MOVWF YEAR1
GOTO  TEST_YEAR2
YEAR_ADD_BIT0
INCF  YEAR1,F
GOTO  DISPLAY
TEST_YEAR2
BTFSS  YEAR2,3
GOTO  YEAR_ADD_BIT1
BTFSS  YEAR2,0
GOTO  YEAR_ADD_BIT1
MOVLW 30H
MOVWF YEAR2
GOTO  TEST_YEAR3
YEAR_ADD_BIT1
INCF  YEAR2,F
GOTO  DISPLAY
TEST_YEAR3
BTFSS  YEAR3,3
GOTO  YEAR_ADD_BIT2
BTFSS  YEAR3,0
GOTO  YEAR_ADD_BIT2
MOVLW 30H
MOVWF YEAR3
GOTO  TEST_YEAR4
YEAR_ADD_BIT2
INCF  YEAR3,F
GOTO  DISPLAY
TEST_YEAR4
BTFSS  YEAR4,3
GOTO  YEAR_ADD_BIT3
BTFSS  YEAR4,0
GOTO  YEAR_ADD_BIT3
MOVLW 30H
MOVWF YEAR4
GOTO DISPLAY
YEAR_ADD_BIT3
INCF  YEAR4,F
GOTO  DISPLAY
;;;;;;;;;
;;;;;;;;;不是11月，不是12月
ADD__MONTH_LOW
BTFSS MONTHL,3
GOTO  ADD_LOW
BTFSS MONTHL,0
GOTO  ADD_LOW
MOVLW 30H
MOVWF MONTHL
MOVLW 31H
MOVWF MONTHH
GOTO DISPLAY
ADD_LOW
INCF  MONTHL
GOTO DISPLAY
INC_HIGH
INCF DAYH
DISPLAY
;;;;;;;;;;;Wo_Li
CALL DISPLAY_DAY
CALL DISPLAY_MONTH
CALL DISPLAY_YEAR
GOTO NEXT3_2
;
NEXT3_3
BTFSS HOURL,3
GOTO BACK_TO_MINUTE;没有累积9s
BTFSS HOURL,0;第三位为1，那第零位是不是1呢？
GOTO BACK_TO_MINUTE;不是9，是8
MOVLW 30H;是9，1S后置0重来
MOVWF HOURL
GOTO BACK_WITHOUT_ADDH
BACK_TO_MINUTE
INCF HOURL,F
GOTO NEXT3_2
BACK_WITHOUT_ADDH
INCF HOURH,F
NEXT3_2
CALL DISPLAY_HOUR
;――――――――――――――――――――
GOTO NEXT2_2
NEXT2_1
INCF MINUTEH,F
NEXT2_2
CALL DISPLAY_MINUTE
CALL EEPROM_SAVE
;――――――――――――――――――
GOTO NEXT1_2
NEXT1_1
INCF SECONDH,F
NEXT1_2
CALL DISPLAY_SECOND
;;;;;temperature

;LOOP_TEM:
;BTFSC ADCON0,2
;GOTO LOOP_TEM; GO/DONE=1，还没有转换完毕
BSF STATUS,RP0
MOVF ADRESL,W
BCF STATUS,RP0
MOVWF TEM_REG
BTFSS TEM_REG,7
GOTO NEXT20_1
BTFSS TEM_REG,6
GOTO TEM_32
BTFSS TEM_REG,5
GOTO TEM_33
GOTO TEM_34
NEXT20_1
BTFSS TEM_REG,6
GOTO NEXT20_2
GOTO TEM_31
NEXT20_2
BTFSS TEM_REG,5
GOTO TEM_29
GOTO TEM_30

TEM_29
MOVLW 32H
MOVWF TEMH
MOVLW 39H
MOVWF TEML
CALL DISPLAY_TEMP
GOTO NEXT20_5

TEM_30
MOVLW 33H
MOVWF TEMH
MOVLW 30H
MOVWF TEML
CALL DISPLAY_TEMP
GOTO NEXT20_5

TEM_31
MOVLW 33H
MOVWF TEMH
MOVLW 31H
MOVWF TEML
CALL DISPLAY_TEMP
GOTO NEXT20_5

TEM_32
MOVLW 33H
MOVWF TEMH
MOVLW 32H
MOVWF TEML
CALL DISPLAY_TEMP
GOTO NEXT20_5

TEM_33
MOVLW 33H
MOVWF TEMH
MOVLW 33H
MOVWF TEML
CALL DISPLAY_TEMP
GOTO NEXT20_5

TEM_34
MOVLW 33H
MOVWF TEMH
MOVLW 34H
MOVWF TEML
CALL DISPLAY_TEMP
GOTO NEXT20_5
NEXT20_5

NOP
NOP
GOTO SECONDL_AGAIN
GOTO ENDING

;――――――――下面全都是子函数 ――――――――――――

INTAD;RB0是用来进入中断的功能开始键
NOP
PB0_DOWN_OVER
BTFSC PORTB,0
GOTO NEXT_FUNCTION
GOTO PB0_DOWN_OVER
NEXT_FUNCTION
MOVLW 80H
MOVWF MOVBUFNUM;首地址
CALL WRITING_COMMAND
MOVLW 0FH
MOVWF MOVBUFNUM;光标闪烁
CALL WRITING_COMMAND
SCAN_AGAIN
BTFSC PORTB,0
GOTO CONTINUE_SCAN1;RB0=1
GOTO DISCERN_PB0;RB0=0;按下
CONTINUE_SCAN1:
BTFSC PORTB,1
GOTO CONTINUE_SCAN2
GOTO DISCERN_PB1;PB1=0;PRESS,24/12
CONTINUE_SCAN2
BTFSC PORTB,2
GOTO CONTINUE_SCAN4
GOTO DISCERN_PB2;PB2=0;PRESS,moving right
CONTINUE_SCAN4
BTFSC PORTB,4
GOTO SCAN_AGAIN
GOTO DISCERN_PB4;PB4=0;PRESS,adding
;24/12 FUNCTION
DISCERN_PB1
NOP
PB1_DOWN_OVER
BTFSC PORTB,1
GOTO NEXT_24_12
GOTO PB1_DOWN_OVER
NEXT_24_12
BTFSS HOURFLAG,0
GOTO _24_TO_12;HOURFLAG=0
GOTO _12_TO_24;HOURFLAG=1
;
_24_TO_12
BTFSS HOURH,1
GOTO HOURH_NOT_TWO;不是2X
GOTO HOURH_IS_2;是2X
HOURH_NOT_TWO 
BTFSS HOURH,0
GOTO LESS_12
BTFSS HOURL,3
GOTO NEXT5_1;HOURL.3=0
GOTO ABOVE_12
NEXT5_1
BTFSS HOURL,2
GOTO NEXT5_2
GOTO ABOVE_12
NEXT5_2
BTFSS HOURL,1
GOTO LESS_12
BTFSS HOURL,0;2_OR_3?
GOTO LESS_12
GOTO ABOVE_12
LESS_12
;显示AM
MOVLW 95H
MOVWF MOVBUFNUM;地址
CALL WRITING_COMMAND
MOVLW 41H;A
MOVWF PAJUDGING
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 4DH;M
MOVWF MOVBUFNUM
CALL WRITING_DATA
BSF HOURFLAG,0
GOTO SWITCH_OVER
;
ABOVE_12
MOVLW 30H
MOVWF HOURH
CALL DISPLAY_HOUR
MOVLW 02H
SUBWF HOURL,F
CALL DISPLAY_HOUR
MOVLW 95H
MOVWF MOVBUFNUM;地址
CALL WRITING_COMMAND
MOVLW 50H;P
MOVWF PAJUDGING
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 4DH;M
MOVWF MOVBUFNUM
CALL WRITING_DATA
BSF HOURFLAG,0
GOTO SWITCH_OVER
;
HOURH_IS_2
BTFSS HOURL,1
GOTO NEXT5_4;1OR0
;――――――2OR3――――
MOVLW 02H;3
SUBWF HOURL,F
MOVLW 31H
MOVWF HOURH
GOTO NEXT5_5
;――――――――――――――
NEXT5_4
MOVLW 30H
MOVWF HOURH
BSF HOURL,3
NEXT5_5
CALL DISPLAY_HOUR
;显示PM
MOVLW 95H
MOVWF MOVBUFNUM;地址
CALL WRITING_COMMAND
MOVLW 50H;P
MOVWF PAJUDGING
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 4DH;M
MOVWF MOVBUFNUM
CALL WRITING_DATA
BSF HOURFLAG,0
GOTO SWITCH_OVER
;
_12_TO_24
NOP
BTFSS PAJUDGING,4
GOTO MORNING
GOTO AFTERNOON
MORNING
MOVLW 95H
MOVWF MOVBUFNUM;地址
CALL WRITING_COMMAND
MOVLW 20H;空格
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 20H;空格
MOVWF MOVBUFNUM
CALL WRITING_DATA
BCF HOURFLAG,0
GOTO SWITCH_OVER

AFTERNOON
BTFSC HOURH,0
GOTO EVENING;HOURH.1=1,晚10点或11点
BTFSS HOURL,3
GOTO _PM_1_TO_7
GOTO EVENING
_PM_1_TO_7
;1点到7点
MOVLW 31H
MOVWF HOURH
MOVLW 02H
ADDWF HOURL,F
CALL DISPLAY_HOUR
MOVLW 95H
MOVWF MOVBUFNUM;地址
CALL WRITING_COMMAND
MOVLW 20H;空格
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 20H;空格
MOVWF MOVBUFNUM
CALL WRITING_DATA
BCF HOURFLAG,0
GOTO SWITCH_OVER
;
EVENING;晚上8点到11点
BTFSC HOURL,3
GOTO _PM_8_TO_9
GOTO NIGHT
_PM_8_TO_9
MOVLW 32H
MOVWF HOURH
BCF HOURL,3
CALL DISPLAY_HOUR
MOVLW 95H
MOVWF MOVBUFNUM;地址
CALL WRITING_COMMAND
MOVLW 20H;空格
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 20H;空格
MOVWF MOVBUFNUM
CALL WRITING_DATA
BCF HOURFLAG,0
GOTO SWITCH_OVER
;
NIGHT
MOVLW 32H
MOVWF HOURH
MOVLW 02H
ADDWF HOURL,F
CALL DISPLAY_HOUR
MOVLW 95H
MOVWF MOVBUFNUM;地址
CALL WRITING_COMMAND
MOVLW 20H;空格
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 20H;空格
MOVWF MOVBUFNUM
CALL WRITING_DATA
BCF HOURFLAG,0
;
SWITCH_OVER
GOTO AGAIN_INT

;MOVING FUNCTION
DISCERN_PB2
PB2_DOWN_OVER
BTFSC PORTB,2
GOTO NEXT_MOVING
GOTO PB2_DOWN_OVER
NEXT_MOVING
BTFSS ADDRESSTEMP,4
GOTO IT_IS_EIGHT
GOTO IT_IS_NINE
;
IT_IS_EIGHT
BTFSS ADDRESSTEMP,2
GOTO JUST_DO_IT;!=1
BTFSS ADDRESSTEMP,1
GOTO JUST_DO_IT;!=1
BTFSS ADDRESSTEMP,0
GOTO JUST_DO_IT;!=1
MOVLW 90H
MOVWF ADDRESSTEMP
GOTO THEN_DISPLAY
;
IT_IS_NINE
BTFSS ADDRESSTEMP,2
GOTO JUST_DO_IT;!=1
BTFSS ADDRESSTEMP,1
GOTO JUST_DO_IT;!=1
BTFSS ADDRESSTEMP,0
GOTO JUST_DO_IT;!=1
MOVLW 80H
MOVWF ADDRESSTEMP
GOTO THEN_DISPLAY
NOP
JUST_DO_IT
INCF ADDRESSTEMP,F
THEN_DISPLAY
MOVF ADDRESSTEMP,W
MOVWF MOVBUFNUM;首地址
CALL WRITING_COMMAND
CALL DELAY
CALL DELAY
CALL DELAY
GOTO AGAIN_INT

;――――――――――adding function――――――――――――――
DISCERN_PB4
NOP
PB4_DOWN_OVER
BTFSC PORTB,4
GOTO ADDING_ONE
GOTO PB4_DOWN_OVER
ADDING_ONE
BTFSS ADDRESSTEMP,4
GOTO ROW_1; 8XH
GOTO ROW_2; 9XH
ROW_1
BTFSS ADDRESSTEMP,2
GOTO CONSUME_1
;现在所在位是日
BTFSS MONTHH,0
GOTO _JANUARY_TO_SEPTEMBER_____
BTFSS MONTHL,1
GOTO OCT_OR_NOV
GOTO DECEMBER
OCT_OR_NOV
BTFSS MONTHL,0
GOTO OCTOBER
GOTO NOVEMBER
_JANUARY_TO_SEPTEMBER_____
BTFSS MONTHL,3
GOTO _JAN_TO_JULY
BTFSS MONTHL,0
GOTO AUGUST
GOTO SEPTEMBER
_JAN_TO_JULY
BTFSS MONTHL,2
GOTO JAN_TO_MARCH
BTFSS MONTHL,1
GOTO APRIL_MAY
BTFSS MONTHL,0
GOTO JUNE
GOTO JULY
APRIL_MAY
BTFSS MONTHL,0
GOTO APRIL
GOTO MAY
JAN_TO_MARCH
BTFSS MONTHL,1
GOTO JANUARY
BTFSS MONTHL,0
GOTO FEBRUARY
GOTO MARCH

SPECIAL_MONTH
BTFSS PING_RUN_FLAG,0
GOTO _28_MONTH_;平年
GOTO _29_MONTH__;闰年

_29_MONTH__
NOP
BTFSS DAYH,1
GOTO  LESS__29TH ;;;;;;;;;没有到20号
BTFSS  DAYL,3
GOTO  LESS__29TH;;;;;;;;;;;没有到28号
BTFSS  DAYL,0
GOTO  LESS__29TH
MOVLW 31H
MOVWF DAYL
MOVLW 30H
MOVWF DAYH
CALL DISPLAY_DAY
GOTO AGAIN_INT

LESS__29TH
;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;没有到29号
BTFSS  DAYL,3
GOTO  INC__DAYL__
BTFSS DAYL,0
GOTO INC__DAYL__
MOVLW 30H
MOVWF DAYL
INCF DAYH,F
CALL DISPLAY_DAY
GOTO AGAIN_INT
;;;;;;WO_Li
INC__DAYL__
INCF  DAYL,F
CALL DISPLAY_DAY
GOTO AGAIN_INT
BTFSS DAYH,1
GOTO INC_HIGH
BTFSS DAYH,0
GOTO INC_HIGH
MOVLW 30H
MOVWF DAYH
CALL DISPLAY_DAY
GOTO AGAIN_INT

_28_MONTH_
BTFSS DAYH,1
GOTO S_LESS_20;比20号要小
BTFSS DAYL,3
GOTO S_EASY_ADDING;不到28号
MOVLW 31H
MOVWF DAYL
MOVLW 30H
MOVWF DAYH
CALL DISPLAY_DAY
GOTO AGAIN_INT
S_LESS_20
BTFSS DAYL,3
GOTO S_EASY_ADDING
BTFSS DAYL,0
GOTO S_EASY_ADDING
MOVLW 30H
MOVWF DAYL
INCF DAYH,F
NEXT21_1
CALL DISPLAY_DAY
GOTO AGAIN_INT
S_EASY_ADDING
INCF DAYL,F
GOTO NEXT21_1






BIG_MONTH
BTFSS DAYH,1
GOTO B_LESS_30
BTFSS DAYH,0
GOTO B_LESS_30
BTFSS DAYL,0
GOTO B_30TH
MOVLW 30H;31ST
MOVWF DAYH
MOVLW 31H
MOVWF DAYL
CALL DISPLAY_DAY
GOTO AGAIN_INT
B_30TH
INCF DAYL,F
CALL DISPLAY_DAY
GOTO AGAIN_INT
B_LESS_30
BTFSS DAYL,3
GOTO NEXT16_2;日最低位不是9
BTFSS DAYL,0
GOTO NEXT16_2;日最低位不是9，是8
MOVLW 30H
MOVWF DAYL
BTFSS DAYH,1
GOTO NEXT16_1;日最高位不是3
BTFSS DAYH,0
GOTO NEXT16_1;日最高位不是3
BTFSS DAYL,0
GOTO B_30TH
MOVLW 30H;31ST
MOVWF DAYH
MOVLW 31H
MOVWF DAYL
CALL DISPLAY_DAY
GOTO AGAIN_INT
MOVLW 30H
MOVWF DAYH
GOTO NEXT16_3
NEXT16_1
INCF DAYH,F;先累加日的高位
NEXT16_3
CALL DISPLAY_DAY
GOTO AGAIN_INT
NEXT16_2
INCF DAYL,F
CALL DISPLAY_DAY
GOTO AGAIN_INT

JANUARY
GOTO BIG_MONTH
FEBRUARY
GOTO SPECIAL_MONTH
MARCH
GOTO BIG_MONTH
APRIL
GOTO LITTLE_MONTH
MAY
GOTO BIG_MONTH
JUNE
GOTO LITTLE_MONTH
JULY
GOTO BIG_MONTH
AUGUST
GOTO BIG_MONTH
SEPTEMBER
GOTO LITTLE_MONTH
OCTOBER
GOTO BIG_MONTH
NOVEMBER
GOTO LITTLE_MONTH
DECEMBER
GOTO BIG_MONTH

LITTLE_MONTH
BTFSS DAYH,1
GOTO _LESS_30
BTFSS DAYH,0
GOTO _LESS_30
MOVLW 30H
MOVWF DAYH
MOVLW 31H
MOVWF DAYL
CALL DISPLAY_DAY
GOTO AGAIN_INT;;;;;;;;;;;;;;;;;;;;;;;;;;;;
_LESS_30
BTFSS DAYL,3
GOTO NEXT6_2;日最低位不是9
BTFSS DAYL,0
GOTO NEXT6_2;日最低位不是9，是8
MOVLW 30H
MOVWF DAYL
BTFSS DAYH,1
GOTO NEXT6_1;日最高位不是3
BTFSS DAYH,0
GOTO NEXT6_1;日最高位不是3
MOVLW 30H
MOVWF DAYH
GOTO NEXT6_3
NEXT6_1
INCF DAYH,F;先累加日的高位
NEXT6_3
CALL DISPLAY_DAY
GOTO AGAIN_INT
NEXT6_2
INCF DAYL,F
CALL DISPLAY_DAY
GOTO AGAIN_INT


CONSUME_1
BTFSS ADDRESSTEMP,1
GOTO CONSUME_2

;现在的位置是月
MONTH_adding
BTFSS MONTHH,0
GOTO JAN_SEP
GOTO OCT_DEC
JAN_SEP
BTFSS MONTHL,3
GOTO NEXT9_2;月最低位不是9
BTFSS MONTHL,0
GOTO NEXT9_2;月最低位不是9，是8
MOVLW 30H
MOVWF MONTHL
MOVLW 31H
MOVWF MONTHH
GOTO NEXT9_1
NEXT9_2
INCF MONTHL,F
NEXT9_1
CALL DISPLAY_MONTH
GOTO AGAIN_INT
OCT_DEC
BTFSS MONTHL,1
GOTO NEXT9_3;月最低位不是2
MOVLW 30H
MOVWF MONTHL
MOVLW 30H
MOVWF MONTHH
GOTO NEXT9_4
NEXT9_3
INCF MONTHL,F
NEXT9_4
CALL DISPLAY_MONTH
GOTO AGAIN_INT
NOP
CONSUME_2
BTFSS ADDRESSTEMP,0
GOTO YEAR_H_SETTING

;现在所处位置是YEAR_L_SETTING
BTFSS YEAR1,3
GOTO NEXT8_2;年最低位不是9
BTFSS YEAR1,0
GOTO NEXT8_2;年最低位不是9，是8
MOVLW 30H
MOVWF YEAR1
BTFSS YEAR2,3
GOTO NEXT8_3;年最GAO位不是9
BTFSS YEAR2,0
GOTO NEXT8_3;年最GAO位不是9，是8
MOVLW 30H
MOVWF YEAR2

BTFSS YEAR3,3
GOTO NEXT8_4;年H最低位不是9
BTFSS YEAR3,0
GOTO NEXT8_4;年H最低位不是9，是8
MOVLW 30H
MOVWF YEAR3
BTFSS YEAR4,3
GOTO NEXT8_5;年H最GAO位不是9
BTFSS YEAR4,0
GOTO NEXT8_5;年H最GAO位不是9，是8
MOVLW 30H
MOVWF YEAR4
GOTO NEXT8_1
NEXT8_3
INCF YEAR2,F
GOTO NEXT8_1
NEXT8_4
INCF YEAR3,F
GOTO NEXT8_1
NEXT8_5
INCF YEAR4,F
GOTO NEXT8_1
NEXT8_2
INCF YEAR1,F
NEXT8_1
CALL DISPLAY_YEAR
GOTO AGAIN_INT

YEAR_H_SETTING
BTFSS YEAR3,3
GOTO NEXT10_2;年最低位不是9
BTFSS YEAR3,0
GOTO NEXT10_2;年最低位不是9，是8
MOVLW 30H
MOVWF YEAR3
BTFSS YEAR4,3
GOTO NEXT10_3;年最GAO位不是9
BTFSS YEAR4,0
GOTO NEXT10_3;年最GAO位不是9，是8
MOVLW 30H
MOVWF YEAR4
GOTO NEXT10_1
NEXT10_3
INCF YEAR4,F
GOTO NEXT10_1
NEXT10_2
INCF YEAR3,F
NEXT10_1
CALL DISPLAY_YEAR
GOTO AGAIN_INT

ROW_2
NOP
BTFSS ADDRESSTEMP,2
GOTO GO_ON1
BTFSS ADDRESSTEMP,0;SECOND_OR_AP
GOTO SECOND_ADDING
GOTO _P_A_CHANGING
;ADDING SECOND
;;;;;;显示年，月，日，时分秒，注意进制，分，秒为60
;;;;;;参数说明：FLAG用来判断得到的数是几
SECOND_ADDING
BTFSS SECONDL,3
GOTO GO_ON2
BTFSS SECONDL,0
GOTO GO_ON2
MOVLW 30H
MOVWF SECONDL
BTFSS SECONDH,2
GOTO GO_ON3
BTFSS SECONDH,0
GOTO GO_ON3
MOVLW 30H
MOVWF SECONDH
GOTO NEXT11_1
GO_ON3
INCF SECONDH,F
GOTO NEXT11_1
GO_ON2
INCF SECONDL,F
NEXT11_1
CALL DISPLAY_SECOND
GOTO AGAIN_INT
;;;;;;; 

GO_ON1
BTFSS ADDRESSTEMP,1
GOTO HOUR_ADDING
GOTO MINUTE_ADDING

_P_A_CHANGING
;此时正处于PM/AM
;;;_P_A_CHANGING
NOP
BTFSS HOURFLAG,0
GOTO AGAIN_INT;24小时制，无需调上下午
BTFSS PAJUDGING,4
GOTO A_2_P
GOTO P_2_A
A_2_P
MOVLW 95H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 50H;P
MOVWF PAJUDGING
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 4DH;M
MOVWF MOVBUFNUM
CALL WRITING_DATA
GOTO AGAIN_INT
P_2_A
MOVLW 95H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVLW 41H;A
MOVWF PAJUDGING
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVLW 4DH;M
MOVWF MOVBUFNUM
CALL WRITING_DATA
GOTO AGAIN_INT

HOUR_ADDING
BTFSS HOURFLAG,0
GOTO _24_ADDING
GOTO _12_ADDING
;;;;;;;;;;;;;;;;
_12_ADDING
BTFSS HOURH,0
GOTO _12_0_9
GOTO _0_2
_12_0_9
BTFSS HOURL,3
GOTO KEEP_ON1
BTFSS HOURL,0
GOTO KEEP_ON1
MOVLW 30H
MOVWF HOURL
INCF HOURH,F
GOTO NEXT12_1
_0_2
BTFSS HOURL,1
GOTO CARRY_ON1
MOVLW 30H
MOVWF HOURH
MOVLW 31H
MOVWF HOURL
GOTO NEXT12_1
CARRY_ON1
INCF HOURL,F
GOTO NEXT12_1
;;;;;;;;;;;;;;;;;;
_24_ADDING
BTFSS HOURH,1
GOTO _0_9
GOTO _0_4
_0_4
BTFSS HOURL,1
GOTO KEEP_ON1
BTFSS HOURL,0
GOTO KEEP_ON1
MOVLW 30H
MOVWF HOURH
MOVWF HOURL
GOTO NEXT12_1

_0_9
BTFSS HOURL,3
GOTO KEEP_ON1
BTFSS HOURL,0
GOTO KEEP_ON1
MOVLW 30H
MOVWF HOURL
INCF HOURH,F
GOTO NEXT12_1

KEEP_ON1
INCF HOURL,F
NEXT12_1
CALL DISPLAY_HOUR
GOTO AGAIN_INT

MINUTE_ADDING
NOP
BTFSS MINUTEL,3
GOTO GO_ON4
BTFSS MINUTEL,0
GOTO GO_ON4
MOVLW 30H
MOVWF MINUTEL
BTFSS MINUTEH,2
GOTO GO_ON5
BTFSS MINUTEH,0
GOTO GO_ON5
MOVLW 30H
MOVWF MINUTEH
GOTO NEXT11_2
GO_ON5
INCF MINUTEH,F
GOTO NEXT11_2
GO_ON4
INCF MINUTEL,F
NEXT11_2
CALL DISPLAY_MINUTE
GOTO AGAIN_INT
AGAIN_INT
GOTO SCAN_AGAIN
DISCERN_PB0;设定完毕，回去喽~~~
BCF INTCON,INTF
MOVLW 80H
MOVWF MOVBUFNUM;首地址
CALL WRITING_COMMAND
MOVLW 0CH
MOVWF MOVBUFNUM;光标NO闪烁
CALL WRITING_COMMAND
NOP
RETFIE


DISPLAY_YEAR
;显示年的前两位
MOVLW 80H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;显示第一行
MOVF YEAR4,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVF YEAR3,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
;显示年的后两位
MOVLW 81H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;显示第一行
MOVF YEAR2,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVF YEAR1,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
RETURN

DISPLAY_MONTH
;显示月
MOVLW 83H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;显示第一行
MOVF MONTHH,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVF MONTHL,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
RETURN

DISPLAY_DAY
MOVLW 85H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;显示第一行
MOVF DAYH,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVF DAYL,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
RETURN

DISPLAY_HOUR
MOVLW 90H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND
MOVF HOURH,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVF HOURL,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
RETURN

DISPLAY_MINUTE
;显示分
MOVLW 92H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;显示第一行
MOVF MINUTEH,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVF MINUTEL,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
RETURN

DISPLAY_TEMP
MOVLW 96H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;显示第一行
MOVF TEMH,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVF TEML,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
RETURN









DISPLAY_SECOND
MOVLW 94H
MOVWF MOVBUFNUM
CALL WRITING_COMMAND;显示第一行
MOVF SECONDH,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
MOVF SECONDL,W
MOVWF MOVBUFNUM
CALL WRITING_DATA
RETURN

TIM0_DELAY:
BCF INTCON,2
MOVLW .109
MOVWF TMR0
TEST
BTFSS INTCON,T0IF
GOTO TEST
DECFSZ TIM0COUNT,F
GOTO TIM0_DELAY
MOVLW .40
MOVWF TIM0COUNT
RETURN


WRITING_COMMAND;写命令子函数
CALL DELAY
BSF PORTC,4;CS=1
MOVLW 08H
MOVWF MOVNUM;移动8次
MOVLW 0F8H;命令控制字写指令
MOVWF MOVBUFCOM
AGAIN1_1:
BCF STATUS,C;C位清零
RLF MOVBUFCOM,F
BCF PORTC,3;CLK=0
BTFSS STATUS,C
GOTO CISZERO1_1;C=0
GOTO CNOTZERO1_1;C=1
CISZERO1_1
BCF PORTC,5;SID=0
GOTO THEN1_1
CNOTZERO1_1
BSF PORTC,5;SID=1
THEN1_1:
BSF PORTC,3;CLK=1产生上升沿
DECFSZ MOVNUM,F
GOTO AGAIN1_1
;命令控制字已写入
MOVLW 08H
MOVWF MOVNUM;移动8次
;在子函数外将命令控制数写入MOVBUFNUM,例如80H
;MOVLW 80H;命令控制字写指令
;MOVWF MOVBUFNUM
MOVLW 0F0H;11110000 高四位
ANDWF MOVBUFNUM,W
MOVWF BUFNUMH
AGAIN1_2:
BCF STATUS,C;C位清零
RLF BUFNUMH,F
BCF PORTC,3;CLK=0
BTFSS STATUS,C
GOTO CISZERO1_2;C=0
GOTO CNOTZERO1_2;C=1
CISZERO1_2
BCF PORTC,5;SID=0
GOTO THEN1_2
CNOTZERO1_2
BSF PORTC,5;SID=1
THEN1_2
BSF PORTC,3;CLK=1产生上升沿
DECFSZ MOVNUM,F
GOTO AGAIN1_2
;控制数高位已经移动完毕
MOVLW 08H
MOVWF MOVNUM
SWAPF MOVBUFNUM,F;MOVBUFNUM高低位交换
MOVLW 0F0H;11110000 高四位
ANDWF MOVBUFNUM,W
MOVWF BUFNUML
AGAIN1_3:
BCF STATUS,C;C位清零
RLF BUFNUML,F
BCF PORTC,3;CLK=0
BTFSS STATUS,C
GOTO CISZERO1_3;C=0
GOTO CNOTZERO1_3;C=1
CISZERO1_3:
BCF PORTC,5;SID=0
GOTO THEN1_3
CNOTZERO1_3
BSF PORTC,5;SID=1
THEN1_3
BSF PORTC,3;CLK=1产生上升沿
DECFSZ MOVNUM,F
GOTO AGAIN1_3
BCF PORTC,4;CS=0
RETURN


WRITING_DATA;写数据子函数
CALL DELAY
BSF PORTC,4;CS=1
MOVLW 08H
MOVWF MOVNUM;移动8次
MOVLW 0FAH;命令控制字写指令
MOVWF MOVBUFCOM
AGAIN2_1:
BCF STATUS,C;C位清零
RLF MOVBUFCOM,F
BCF PORTC,3;CLK=0
BTFSS STATUS,C
GOTO CISZERO2_1;C=0
GOTO CNOTZERO2_1;C=1
CISZERO2_1
BCF PORTC,5;SID=0
GOTO THEN2_1
CNOTZERO2_1
BSF PORTC,5;SID=1
THEN2_1:
BSF PORTC,3;CLK=1产生上升沿
DECFSZ MOVNUM,F
GOTO AGAIN2_1
;命令控制字已写入
MOVLW 08H
MOVWF MOVNUM;移动8次
;在子函数外将命令控制数写入MOVBUFNUM,例如80H
;MOVLW 80H;命令控制字写指令
;MOVWF MOVBUFNUM
MOVLW 0F0H;11110000 高四位
ANDWF MOVBUFNUM,W
MOVWF BUFNUMH
AGAIN2_2:
BCF STATUS,C;C位清零
RLF BUFNUMH,F
BCF PORTC,3;CLK=0
BTFSS STATUS,C
GOTO CISZERO2_2;C=0
GOTO CNOTZERO2_2;C=1
CISZERO2_2
BCF PORTC,5;SID=0
GOTO THEN2_2
CNOTZERO2_2
BSF PORTC,5;SID=1
THEN2_2
BSF PORTC,3;CLK=1产生上升沿
DECFSZ MOVNUM,F
GOTO AGAIN2_2
;控制数高位已经移动完毕
MOVLW 08H
MOVWF MOVNUM
SWAPF MOVBUFNUM,F;MOVBUFNUM高低位交换
MOVLW 0F0H;11110000 高四位
ANDWF MOVBUFNUM,W
MOVWF BUFNUML
AGAIN2_3:
BCF STATUS,C;C位清零
RLF BUFNUML,F
BCF PORTC,3;CLK=0
BTFSS STATUS,C
GOTO CISZERO1_3;C=0
GOTO CNOTZERO1_3;C=1
CISZERO2_3:
BCF PORTC,5;SID=0
GOTO THEN2_3
CNOTZERO2_3
BSF PORTC,5;SID=1
THEN2_3
BSF PORTC,3;CLK=1产生上升沿
DECFSZ MOVNUM,F
GOTO AGAIN2_3
BCF PORTC,4;CS=0
RETURN

DELAY:
MOVLW .15
MOVWF TMGENR1
L1
MOVLW .11
MOVWF TMGENR2
L2
DECFSZ TMGENR2,F
GOTO L2
DECFSZ TMGENR1,F
GOTO L1
RETURN

DELAY1:
MOVLW .15
MOVWF TMGENR1
LL1
MOVLW .110
MOVWF TMGENR2
LL2
DECFSZ TMGENR2,F
GOTO LL2
DECFSZ TMGENR1,F
GOTO LL1
RETURN
EEPROM_SAVE
;EEPROM地址为00H到FFH,且不与其他地址重叠
;写入到EEPROM中，放在1s的中断里,写入低位

;;;;;;;;;;;;;;;;;写YEAR2
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2            ;;;写入地址和写入数据顺序反过来不会影响吧？
MOVLW  02H
MOVWF EEADR
BCF  STATUS,RP1
BCF  STATUS,RP0
MOVF HOURH,W 
BSF  STATUS,RP1
BCF  STATUS,RP0
MOVWF EEDATA 	
BSF  STATUS,RP0
BCF EECON1,7
BSF EECON1,WREN
BCF INTCON,GIE
MOVLW 55H
MOVWF EECON2
MOVLW 0AAH
MOVWF EECON2
BSF EECON1,WR
BSF INTCON,GIE
TEST_FINISH_WRITE2
BTFSC  EECON1,1
GOTO  TEST_FINISH_WRITE2
BCF  EECON1,WREN


;;;;;;;;;;;;;;;;;写YEAR1
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2            ;;;写入地址和写入数据顺序反过来不会影响吧？
MOVLW  03H
MOVWF EEADR
BCF  STATUS,RP1
BCF  STATUS,RP0
MOVF HOURL,W 
BSF  STATUS,RP1
BCF  STATUS,RP0
MOVWF EEDATA 	
BSF  STATUS,RP0
BCF EECON1,7
BSF EECON1,WREN
BCF INTCON,GIE
MOVLW 55H
MOVWF EECON2
MOVLW 0AAH
MOVWF EECON2
BSF EECON1,WR
BSF INTCON,GIE
TEST_FINISH_WRITE3
BTFSC  EECON1,1
GOTO  TEST_FINISH_WRITE3
BCF  EECON1,WREN


;;;;;;;;;;;;;;;;;写MONTH
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2            ;;;写入地址和写入数据顺序反过来不会影响吧？
MOVLW  04H
MOVWF EEADR
BCF  STATUS,RP1
BCF  STATUS,RP0
MOVF MINUTEH,W 
BSF  STATUS,RP1
BCF  STATUS,RP0
MOVWF EEDATA 	
BSF  STATUS,RP0
BCF EECON1,7
BSF EECON1,WREN
BCF INTCON,GIE
MOVLW 55H
MOVWF EECON2
MOVLW 0AAH
MOVWF EECON2
BSF EECON1,WR
BSF INTCON,GIE
TEST_FINISH_WRITE4
BTFSC  EECON1,1
GOTO  TEST_FINISH_WRITE4
BCF  EECON1,WREN

;;;;;;;;;;;;;;;;;写MONTHL
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2            ;;;写入地址和写入数据顺序反过来不会影响吧？
MOVLW  05H
MOVWF EEADR
BCF  STATUS,RP1
BCF  STATUS,RP0
MOVF MINUTEL,W 
BSF  STATUS,RP1
BCF  STATUS,RP0
MOVWF EEDATA 	
BSF  STATUS,RP0
BCF EECON1,7
BSF EECON1,WREN
BCF INTCON,GIE
MOVLW 55H
MOVWF EECON2
MOVLW 0AAH
MOVWF EECON2
BSF EECON1,WR
BSF INTCON,GIE
TEST_FINISH_WRITE5
BTFSC  EECON1,1
GOTO  TEST_FINISH_WRITE5
BCF  EECON1,WREN

;;;;;;;;;;;;;;;;;写DAYH
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2            ;;;写入地址和写入数据顺序反过来不会影响吧？
MOVLW  06H
MOVWF EEADR
BCF  STATUS,RP1
BCF  STATUS,RP0
MOVF DAYH,W 
BSF  STATUS,RP1
BCF  STATUS,RP0
MOVWF EEDATA 	
BSF  STATUS,RP0
BCF EECON1,7
BSF EECON1,WREN
BCF INTCON,GIE
MOVLW 55H
MOVWF EECON2
MOVLW 0AAH
MOVWF EECON2
BSF EECON1,WR
BSF INTCON,GIE
TEST_FINISH_WRITE6
BTFSC  EECON1,1
GOTO  TEST_FINISH_WRITE6
BCF  EECON1,WREN
;;;;;;;;;;;;;;;;;写DAYL
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2            ;;;写入地址和写入数据顺序反过来不会影响吧？
MOVLW  07H
MOVWF EEADR
BCF  STATUS,RP1
BCF  STATUS,RP0
MOVF DAYL,W 
BSF  STATUS,RP1
BCF  STATUS,RP0
MOVWF EEDATA 	
BSF  STATUS,RP0
BCF EECON1,7
BSF EECON1,WREN
BCF INTCON,GIE
MOVLW 55H
MOVWF EECON2
MOVLW 0AAH
MOVWF EECON2
BSF EECON1,WR
BSF INTCON,GIE
TEST_FINISH_WRITE7
BTFSC  EECON1,1
GOTO  TEST_FINISH_WRITE7
BCF  EECON1,WREN
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2            ;;;写入地址和写入数据顺序反过来不会影响吧？
MOVLW  08H
MOVWF EEADR
BCF  STATUS,RP1
BCF  STATUS,RP0
MOVF MONTHL,W 
BSF  STATUS,RP1
BCF  STATUS,RP0
MOVWF EEDATA 	
BSF  STATUS,RP0
BCF EECON1,7
BSF EECON1,WREN
BCF INTCON,GIE
MOVLW 55H
MOVWF EECON2
MOVLW 0AAH
MOVWF EECON2
BSF EECON1,WR
BSF INTCON,GIE
TEST_FINISH_WRITE8
BTFSC  EECON1,1
GOTO  TEST_FINISH_WRITE8
BCF  EECON1,WREN

BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2            ;;;写入地址和写入数据顺序反过来不会影响吧？
MOVLW  09H
MOVWF EEADR
BCF  STATUS,RP1
BCF  STATUS,RP0
MOVF MONTHH,W 
BSF  STATUS,RP1
BCF  STATUS,RP0
MOVWF EEDATA 	
BSF  STATUS,RP0
BCF EECON1,7
BSF EECON1,WREN
BCF INTCON,GIE
MOVLW 55H
MOVWF EECON2
MOVLW 0AAH
MOVWF EECON2
BSF EECON1,WR
BSF INTCON,GIE
TEST_FINISH_WRITE9
BTFSC  EECON1,1
GOTO  TEST_FINISH_WRITE9
BCF  EECON1,WREN
BCF  STATUS,RP1  ;;;;;退出的时候在主程序，还原到第零页
BCF  STATUS,RP0
RETURN

EEPROM_LOAD
;;;;;;;;;;;;;;;;;;;;;读EEPROM
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2             ;;;
MOVLW 02H
MOVWF EEADR
BSF STATUS,RP0
BCF EECON1,EEPGD
BSF EECON1,RD
BCF STATUS,RP0
MOVF EEDATA,W
BCF STATUS,RP0
BCF STATUS,RP1
MOVWF HOURH
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2             ;;;
MOVLW 03H
MOVWF EEADR
BSF STATUS,RP0
BCF EECON1,EEPGD
BSF EECON1,RD
BCF STATUS,RP0
MOVF EEDATA,W
BCF STATUS,RP0
BCF STATUS,RP1
MOVWF HOURL
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2             ;;;
MOVLW 04H
MOVWF EEADR
BSF STATUS,RP0
BCF EECON1,EEPGD
BSF EECON1,RD
BCF STATUS,RP0
MOVF EEDATA,W
BCF STATUS,RP0
BCF STATUS,RP1
MOVWF MINUTEH
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2             ;;;
MOVLW 05H
MOVWF EEADR
BSF STATUS,RP0
BCF EECON1,EEPGD
BSF EECON1,RD
BCF STATUS,RP0
MOVF EEDATA,W
BCF STATUS,RP0
BCF STATUS,RP1
MOVWF MINUTEL
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2             ;;;
MOVLW 06H
MOVWF EEADR
BSF STATUS,RP0
BCF EECON1,EEPGD
BSF EECON1,RD
BCF STATUS,RP0
MOVF EEDATA,W
BCF STATUS,RP0
BCF STATUS,RP1
MOVWF DAYH
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2             ;;;
MOVLW 07H
MOVWF EEADR
BSF STATUS,RP0
BCF EECON1,EEPGD
BSF EECON1,RD
BCF STATUS,RP0
MOVF EEDATA,W
BCF STATUS,RP0
BCF STATUS,RP1
MOVWF DAYL
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2             ;;;
MOVLW 08H
MOVWF EEADR
BSF STATUS,RP0
BCF EECON1,EEPGD
BSF EECON1,RD
BCF STATUS,RP0
MOVF EEDATA,W
BCF STATUS,RP0
BCF STATUS,RP1
MOVWF MONTHL
BSF  STATUS,RP1
BCF  STATUS,RP0 ;;;;;;;;;;;;BANK2   
MOVLW 09H
MOVWF EEADR
BSF STATUS,RP0
BCF EECON1,EEPGD
BSF EECON1,RD
BCF STATUS,RP0
MOVF EEDATA,W
BCF STATUS,RP0
BCF STATUS,RP1
MOVWF MONTHH
CALL DISPLAY_MONTH
CALL DISPLAY_MINUTE
CALL DISPLAY_DAY     ;;;;;;;;退出的时候返回第0页
CALL DISPLAY_HOUR
RETURN
ENDING
END



